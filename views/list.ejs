<!DOCTYPE html>
<html>

<head>
    <title>To-Do List</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background: linear-gradient(90deg, rgba(2, 0, 36, 1) 0%, rgba(9, 9, 121, 1) 35%, rgba(0, 212, 255, 1) 100%);
            /* Gradient background */
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }

        .container {
            width: 100%;
            max-width: 800px;
            /* Increased max-width for larger list */
            padding: 20px;
            background-color: rgba(255, 255, 255, 0.9);
            /* Add a slight opacity to the container background */
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            overflow: hidden;
            /* Hide overflow content */
        }

        h1 {
            text-align: center;
            margin-bottom: 20px;
        }

        ul {
            list-style: none;
            padding: 0;
            margin: 0;
            /* Remove default margin */
            max-height: 600px;
            /* Increased maximum height of the list */
            overflow-y: auto;
            /* Add vertical scrollbar if needed */
        }

        li {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            border-bottom: 1px solid #ccc;
        }

        button {
            background-color: #ff6666;
            color: white;
            border: none;
            padding: 8px 12px;
            /* Increased button padding */
            cursor: pointer;
            width: 80px;
            /* Increased button width */
            font-size: 16px;
            /* Increased font size */
        }

        button.edit {
            background-color: #33cc33;
            color: white;
            border: none;
            padding: 8px 12px;
            cursor: pointer;
            width: 80px;
            font-size: 16px;
        }

        button:hover {
            background-color: #e60000;
        }

        .add-task {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 20px;
        }

        .add-task input {
            flex: 1;
            padding: 8px;
            /* Increased input padding */
            margin-right: 10px;
            font-size: 16px;
            /* Increased font size */
        }

        /* Responsive Styles */
        @media (max-width: 768px) {
            .container {
                max-width: 100%;
                border-radius: 0;
            }

            button {
                width: auto;
                padding: 5px;
                margin-left: 5px;
            }
        }
    </style>
</head>

<body>
    <div class="container">
        <h1>To-Do List</h1>
        <div class="add-task">
            <input type="text" id="taskInput" placeholder="Add a new task">
            <button onclick="addTask()">Add</button>
        </div>
        <ul id="taskList">
            <!-- Tasks will be added here -->
        </ul>
    </div>

    <script>
        function addTask() {
            const taskInput = document.getElementById("taskInput");
            const taskText = taskInput.value.trim();
            if (taskText !== "") {
                const taskList = document.getElementById("taskList");
                const li = document.createElement("li");
                li.innerHTML = `
          <span>${taskText}</span>
          <button class="edit" onclick="editTask(this)">Edit</button>
          <button onclick="deleteTask(this)">Delete</button>
        `;
                taskList.appendChild(li);
                taskInput.value = "";
            }
        }

        function deleteTask(button) {
            const taskList = document.getElementById("taskList");
            const li = button.parentNode;
            taskList.removeChild(li);
        }

        function editTask(button) {
            const span = button.previousElementSibling;
            const newText = prompt("Edit task:", span.textContent);
            if (newText !== null) {
                span.textContent = newText;
            }
        }
    </script>
</body>

</html>